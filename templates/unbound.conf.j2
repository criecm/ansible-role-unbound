# {{ ansible_managed }}
server:
{% if unbound_pidfile %}
	pidfile: {{ unbound_pidfile }}
{% endif %}
	extended-statistics: yes
	num-threads: {{ [ ansible_processor_count|int/2, 1 ] | max | int }}
	do-not-query-localhost: yes
	interface: 127.0.0.1
	interface: ::1
	do-ip6: yes
	hide-identity: yes
	hide-version: yes
{% if unbound_interfaces | count() > 0 %}
{% for ip in unbound_interfaces %}
{% if ip not in ["127.0.0.1","::1"] %}
	interface: {{ ip }}
{% endif %}
{% endfor %}
{% else %}
{% for ip in ansible_all_ipv4_addresses | union(ansible_all_ipv6_addresses) %}
	interface: {{ ip }}
{% endfor %}
{% endif %}
	auto-trust-anchor-file: "{{ unbound_trust_anchor }}"
{% if unbound_root_hints %}
	root-hints: "{{ unbound_root_hints }}"
{% endif %}
	access-control: 0.0.0.0/0 refuse
	access-control: ::/0 refuse
{% if our_nets | union(private_nets) | count > 0 %}
	access-control: 127.0.0.0/8 allow
	access-control: ::1 allow
{% for net in our_nets | union(private_nets) %}
	access-control: {{ net }} allow
{% endfor %}
{% endif %}

{% for priv_reverse in unbound_nodefault %}
	local-zone: "{{ priv_reverse }}" nodefault
{% endfor %}


{% for net in private_nets %}
	private-address: {{ net }}
{% endfor %}

{% for dom in private_domains %}
	domain-insecure: "{{ dom.name }}"
{% if not dom.name | match(".*\.arpa\.?") %}
	private-domain: "{{ dom.name }}"
{% endif %}
{% endfor %}

remote-control:
	control-enable: yes
{% if unbound_control_interface != '' %}
	control-interface: {{ unbound_control_interface }}
{% endif %}


{% for dom in our_domains | union(private_domains) %}

stub-zone:
	name: "{{ dom.name }}"
{% for master in dom.masters %}
	stub-addr: {{ master }}
{% endfor %}
{% endfor %}
{% for dom in unbound_forward_domains %}

forward-zone:
	name: "{{ dom.name }}"
{% for master in dom.masters %}
	forward-addr: {{ master }}
{% endfor %}
{% endfor %}
{% if unbound_forwarders | count() > 0 %}

forward-zone:
	name: "."
  {% for resolver in unbound_forwarders %}
	forward-addr: {{ resolver }}
  {% endfor %}
	forward-first: yes
{% endif %}
